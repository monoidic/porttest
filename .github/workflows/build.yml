name: Build

on:
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{steps.release.outputs.upload_url}}
    steps:
      - uses: actions/create-release@v1
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: tag-${{ github.sha }}
          release_name: ${{ github.sha }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        arch: [ x86_64, aarch64 ]
    steps:
    - uses: actions/checkout@v3
    - run: sudo sh -c 'apt update && apt install qemu-user-static'

    # build in alpine chroot to allow for the binary to be static
    - run: wget -O rootfs.tgz https://dl-cdn.alpinelinux.org/alpine/latest-stable/releases/${{ matrix.arch }}/alpine-minirootfs-3.18.3-${{ matrix.arch }}.tar.gz
    - run: mkdir rootfs
    - run: sudo tar -C rootfs -xf rootfs.tgz
    - run: sudo cp static.sh rootfs/
    # actually have DNS resolution
    - run: printf 'nameserver 1.1.1.1\n' | sudo tee rootfs/etc/resolv.conf
    - run: sudo mkdir rootfs/src
    - run: sudo mount -o bind . rootfs/src
    - run: sudo cp $(which qemu-${{ matrix.arch }}-static) rootfs/
    - run: sudo chroot rootfs /qemu-${{ matrix.arch }}-static /bin/sh /static.sh

    - run: mkdir a
    - run: cp rootfs/src/server/server rootfs/src/client/client a
    - run: cd a && zip release.zip server client && mv release.zip ..

    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: release.zip
        asset_name: release_${{ matrix.arch }}.zip
        asset_content_type: application/zip
